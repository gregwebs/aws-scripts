#!/usr/bin/env bash
set -u
set -o errexit
set -o pipefail

function command_help {
  echo "\
    $(basename "$0") CLUSTER SERVICE TASK_DEFINITION RUNNING_COUNT
  "
}

function error_msg() {
  {
  echo ""
  echo "ERROR: $*"
  echo ""
  } >&2
}

function exit_msg() {
  error_msg "$@"
  command_help >&2
  exit 1
}

if [[ -z ${1+undefined-guard} ]]; then
  exit_msg "expected a cluster"
fi
cluster="$1"
shift

if [[ -z ${1+undefined-guard} ]]; then
  exit_msg "expected a service"
fi
service="$1"
shift

if [[ -z ${1+undefined-guard} ]]; then
  exit_msg "expected a task definition"
fi
td="$(echo "$1" | cut -d '/' -f 2)"
shift

if [[ -z ${1+undefined-guard} ]]; then
  exit_msg "expected an expected running count"
fi
running_count="$1"
shift

AWS_DIR="$( dirname "$0" )"
deployment=$("$AWS_DIR/ecs-primary-deployment" "$cluster" "$service")

deployed_task=$(echo "$deployment" | jq -r .taskDefinition | cut -d '/' -f 2)
if ! [[ "$deployed_task" = "$td" ]] ; then
  exit_msg "expected task $td got $deployed_task"
fi

deployed_count=$(echo "$deployment" | jq -r .runningCount)
if ! [[ "$deployed_count" = "$running_count" ]] ; then
  exit_msg "expected task $running_count got $deployed_count"
fi
